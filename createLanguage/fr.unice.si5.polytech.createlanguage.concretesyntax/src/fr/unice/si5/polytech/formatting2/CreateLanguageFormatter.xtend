/*
 * generated by Xtext 2.14.0
 */
package fr.unice.si5.polytech.formatting2

import com.google.inject.Inject
import fr.unice.si5.polytech.createlanguage.abstractsyntax.createlanguage.CreateProgram
import fr.unice.si5.polytech.createlanguage.abstractsyntax.createlanguage.Interruption
import fr.unice.si5.polytech.services.CreateLanguageGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class CreateLanguageFormatter extends AbstractFormatter2 {
	
	@Inject extension CreateLanguageGrammarAccess

	def dispatch void format(CreateProgram createProgram, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (choreography : createProgram.choreographies) {
			choreography.format
		}
	}

	def dispatch void format(Interruption interruption, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (condition : interruption.conditions) {
			condition.format
		}
	}
	
	// TODO: implement for LoopChoreography, FiniteChoreography
}
