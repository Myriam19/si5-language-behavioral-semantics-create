/*
 * generated by Xtext 2.14.0
 */
package fr.unice.si5.polytech.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class CreateLanguageGrammarAccess extends AbstractGrammarElementFinder {
	
	public class CreateProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.si5.polytech.CreateLanguage.CreateProgram");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCreateProgramAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCreateProgramKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInstructionsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cInstructionsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cInstructionsInstructionParserRuleCall_4_2_0 = (RuleCall)cInstructionsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cInstructionsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cInstructionsInstructionParserRuleCall_4_3_1_0 = (RuleCall)cInstructionsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CreateProgram:
		//	{CreateProgram}
		//	'CreateProgram'
		//	name=EString
		//	'{' ('instructions' '{' instructions+=Instruction ("," instructions+=Instruction)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{CreateProgram} 'CreateProgram' name=EString '{' ('instructions' '{' instructions+=Instruction (","
		//instructions+=Instruction)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{CreateProgram}
		public Action getCreateProgramAction_0() { return cCreateProgramAction_0; }
		
		//'CreateProgram'
		public Keyword getCreateProgramKeyword_1() { return cCreateProgramKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('instructions' '{' instructions+=Instruction ("," instructions+=Instruction)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'instructions'
		public Keyword getInstructionsKeyword_4_0() { return cInstructionsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//instructions+=Instruction
		public Assignment getInstructionsAssignment_4_2() { return cInstructionsAssignment_4_2; }
		
		//Instruction
		public RuleCall getInstructionsInstructionParserRuleCall_4_2_0() { return cInstructionsInstructionParserRuleCall_4_2_0; }
		
		//("," instructions+=Instruction)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//instructions+=Instruction
		public Assignment getInstructionsAssignment_4_3_1() { return cInstructionsAssignment_4_3_1; }
		
		//Instruction
		public RuleCall getInstructionsInstructionParserRuleCall_4_3_1_0() { return cInstructionsInstructionParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class InstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.si5.polytech.CreateLanguage.Instruction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInstruction_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLoopChoreographyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cFiniteChoreographyParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGoForwardParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//Instruction:
		//	Instruction_Impl | LoopChoreography | FiniteChoreography | GoForward;
		@Override public ParserRule getRule() { return rule; }
		
		//Instruction_Impl | LoopChoreography | FiniteChoreography | GoForward
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Instruction_Impl
		public RuleCall getInstruction_ImplParserRuleCall_0() { return cInstruction_ImplParserRuleCall_0; }
		
		//LoopChoreography
		public RuleCall getLoopChoreographyParserRuleCall_1() { return cLoopChoreographyParserRuleCall_1; }
		
		//FiniteChoreography
		public RuleCall getFiniteChoreographyParserRuleCall_2() { return cFiniteChoreographyParserRuleCall_2; }
		
		//GoForward
		public RuleCall getGoForwardParserRuleCall_3() { return cGoForwardParserRuleCall_3; }
	}
	public class ConditionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.si5.polytech.CreateLanguage.Condition");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cCondition_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cObjectFoundParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Condition:
		//	Condition_Impl | ObjectFound;
		@Override public ParserRule getRule() { return rule; }
		
		//Condition_Impl | ObjectFound
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Condition_Impl
		public RuleCall getCondition_ImplParserRuleCall_0() { return cCondition_ImplParserRuleCall_0; }
		
		//ObjectFound
		public RuleCall getObjectFoundParserRuleCall_1() { return cObjectFoundParserRuleCall_1; }
	}
	public class ChoreographyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.si5.polytech.CreateLanguage.Choreography");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLoopChoreographyParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFiniteChoreographyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Choreography:
		//	LoopChoreography | FiniteChoreography;
		@Override public ParserRule getRule() { return rule; }
		
		//LoopChoreography | FiniteChoreography
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//LoopChoreography
		public RuleCall getLoopChoreographyParserRuleCall_0() { return cLoopChoreographyParserRuleCall_0; }
		
		//FiniteChoreography
		public RuleCall getFiniteChoreographyParserRuleCall_1() { return cFiniteChoreographyParserRuleCall_1; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.si5.polytech.CreateLanguage.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class Instruction_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.si5.polytech.CreateLanguage.Instruction_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInstructionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInstructionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Instruction_Impl Instruction:
		//	{Instruction}
		//	'Instruction';
		@Override public ParserRule getRule() { return rule; }
		
		//{Instruction} 'Instruction'
		public Group getGroup() { return cGroup; }
		
		//{Instruction}
		public Action getInstructionAction_0() { return cInstructionAction_0; }
		
		//'Instruction'
		public Keyword getInstructionKeyword_1() { return cInstructionKeyword_1; }
	}
	public class LoopChoreographyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.si5.polytech.CreateLanguage.LoopChoreography");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLoopChoreographyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLoopChoreographyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInterruptionsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cInterruptionsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cInterruptionsInterruptionParserRuleCall_4_2_0 = (RuleCall)cInterruptionsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cInterruptionsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cInterruptionsInterruptionParserRuleCall_4_3_1_0 = (RuleCall)cInterruptionsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInstructionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cInstructionsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cInstructionsInstructionParserRuleCall_5_2_0 = (RuleCall)cInstructionsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cInstructionsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cInstructionsInstructionParserRuleCall_5_3_1_0 = (RuleCall)cInstructionsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//LoopChoreography:
		//	{LoopChoreography}
		//	'LoopChoreography'
		//	name=EString
		//	'{' ('interruptions' '{' interruptions+=Interruption ("," interruptions+=Interruption)* '}')? ('instructions' '{'
		//	instructions+=Instruction ("," instructions+=Instruction)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{LoopChoreography} 'LoopChoreography' name=EString '{' ('interruptions' '{' interruptions+=Interruption (","
		//interruptions+=Interruption)* '}')? ('instructions' '{' instructions+=Instruction ("," instructions+=Instruction)*
		//'}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{LoopChoreography}
		public Action getLoopChoreographyAction_0() { return cLoopChoreographyAction_0; }
		
		//'LoopChoreography'
		public Keyword getLoopChoreographyKeyword_1() { return cLoopChoreographyKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('interruptions' '{' interruptions+=Interruption ("," interruptions+=Interruption)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'interruptions'
		public Keyword getInterruptionsKeyword_4_0() { return cInterruptionsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//interruptions+=Interruption
		public Assignment getInterruptionsAssignment_4_2() { return cInterruptionsAssignment_4_2; }
		
		//Interruption
		public RuleCall getInterruptionsInterruptionParserRuleCall_4_2_0() { return cInterruptionsInterruptionParserRuleCall_4_2_0; }
		
		//("," interruptions+=Interruption)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//interruptions+=Interruption
		public Assignment getInterruptionsAssignment_4_3_1() { return cInterruptionsAssignment_4_3_1; }
		
		//Interruption
		public RuleCall getInterruptionsInterruptionParserRuleCall_4_3_1_0() { return cInterruptionsInterruptionParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('instructions' '{' instructions+=Instruction ("," instructions+=Instruction)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'instructions'
		public Keyword getInstructionsKeyword_5_0() { return cInstructionsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//instructions+=Instruction
		public Assignment getInstructionsAssignment_5_2() { return cInstructionsAssignment_5_2; }
		
		//Instruction
		public RuleCall getInstructionsInstructionParserRuleCall_5_2_0() { return cInstructionsInstructionParserRuleCall_5_2_0; }
		
		//("," instructions+=Instruction)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//instructions+=Instruction
		public Assignment getInstructionsAssignment_5_3_1() { return cInstructionsAssignment_5_3_1; }
		
		//Instruction
		public RuleCall getInstructionsInstructionParserRuleCall_5_3_1_0() { return cInstructionsInstructionParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class FiniteChoreographyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.si5.polytech.CreateLanguage.FiniteChoreography");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cFiniteChoreographyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cFiniteChoreographyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cInterruptionsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cInterruptionsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cInterruptionsInterruptionParserRuleCall_4_2_0 = (RuleCall)cInterruptionsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cInterruptionsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cInterruptionsInterruptionParserRuleCall_4_3_1_0 = (RuleCall)cInterruptionsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cInstructionsKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cInstructionsAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cInstructionsInstructionParserRuleCall_5_2_0 = (RuleCall)cInstructionsAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cInstructionsAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cInstructionsInstructionParserRuleCall_5_3_1_0 = (RuleCall)cInstructionsAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//FiniteChoreography:
		//	{FiniteChoreography}
		//	'FiniteChoreography'
		//	name=EString
		//	'{' ('interruptions' '{' interruptions+=Interruption ("," interruptions+=Interruption)* '}')? ('instructions' '{'
		//	instructions+=Instruction ("," instructions+=Instruction)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{FiniteChoreography} 'FiniteChoreography' name=EString '{' ('interruptions' '{' interruptions+=Interruption (","
		//interruptions+=Interruption)* '}')? ('instructions' '{' instructions+=Instruction ("," instructions+=Instruction)*
		//'}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{FiniteChoreography}
		public Action getFiniteChoreographyAction_0() { return cFiniteChoreographyAction_0; }
		
		//'FiniteChoreography'
		public Keyword getFiniteChoreographyKeyword_1() { return cFiniteChoreographyKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('interruptions' '{' interruptions+=Interruption ("," interruptions+=Interruption)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'interruptions'
		public Keyword getInterruptionsKeyword_4_0() { return cInterruptionsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//interruptions+=Interruption
		public Assignment getInterruptionsAssignment_4_2() { return cInterruptionsAssignment_4_2; }
		
		//Interruption
		public RuleCall getInterruptionsInterruptionParserRuleCall_4_2_0() { return cInterruptionsInterruptionParserRuleCall_4_2_0; }
		
		//("," interruptions+=Interruption)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//interruptions+=Interruption
		public Assignment getInterruptionsAssignment_4_3_1() { return cInterruptionsAssignment_4_3_1; }
		
		//Interruption
		public RuleCall getInterruptionsInterruptionParserRuleCall_4_3_1_0() { return cInterruptionsInterruptionParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//('instructions' '{' instructions+=Instruction ("," instructions+=Instruction)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'instructions'
		public Keyword getInstructionsKeyword_5_0() { return cInstructionsKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//instructions+=Instruction
		public Assignment getInstructionsAssignment_5_2() { return cInstructionsAssignment_5_2; }
		
		//Instruction
		public RuleCall getInstructionsInstructionParserRuleCall_5_2_0() { return cInstructionsInstructionParserRuleCall_5_2_0; }
		
		//("," instructions+=Instruction)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//instructions+=Instruction
		public Assignment getInstructionsAssignment_5_3_1() { return cInstructionsAssignment_5_3_1; }
		
		//Instruction
		public RuleCall getInstructionsInstructionParserRuleCall_5_3_1_0() { return cInstructionsInstructionParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class GoForwardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.si5.polytech.CreateLanguage.GoForward");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGoForwardAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGoForwardKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//GoForward:
		//	{GoForward}
		//	'GoForward';
		@Override public ParserRule getRule() { return rule; }
		
		//{GoForward} 'GoForward'
		public Group getGroup() { return cGroup; }
		
		//{GoForward}
		public Action getGoForwardAction_0() { return cGoForwardAction_0; }
		
		//'GoForward'
		public Keyword getGoForwardKeyword_1() { return cGoForwardKeyword_1; }
	}
	public class InterruptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.si5.polytech.CreateLanguage.Interruption");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInterruptionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInterruptionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cChoreographyKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cChoreographyAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final CrossReference cChoreographyChoreographyCrossReference_3_1_0 = (CrossReference)cChoreographyAssignment_3_1.eContents().get(0);
		private final RuleCall cChoreographyChoreographyEStringParserRuleCall_3_1_0_1 = (RuleCall)cChoreographyChoreographyCrossReference_3_1_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cConditionsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cConditionsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cConditionsConditionParserRuleCall_4_2_0 = (RuleCall)cConditionsAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cConditionsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cConditionsConditionParserRuleCall_4_3_1_0 = (RuleCall)cConditionsAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Interruption:
		//	{Interruption}
		//	'Interruption'
		//	'{' ('choreography' choreography=[Choreography|EString])? ('conditions' '{' conditions+=Condition (","
		//	conditions+=Condition)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Interruption} 'Interruption' '{' ('choreography' choreography=[Choreography|EString])? ('conditions' '{'
		//conditions+=Condition ("," conditions+=Condition)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Interruption}
		public Action getInterruptionAction_0() { return cInterruptionAction_0; }
		
		//'Interruption'
		public Keyword getInterruptionKeyword_1() { return cInterruptionKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('choreography' choreography=[Choreography|EString])?
		public Group getGroup_3() { return cGroup_3; }
		
		//'choreography'
		public Keyword getChoreographyKeyword_3_0() { return cChoreographyKeyword_3_0; }
		
		//choreography=[Choreography|EString]
		public Assignment getChoreographyAssignment_3_1() { return cChoreographyAssignment_3_1; }
		
		//[Choreography|EString]
		public CrossReference getChoreographyChoreographyCrossReference_3_1_0() { return cChoreographyChoreographyCrossReference_3_1_0; }
		
		//EString
		public RuleCall getChoreographyChoreographyEStringParserRuleCall_3_1_0_1() { return cChoreographyChoreographyEStringParserRuleCall_3_1_0_1; }
		
		//('conditions' '{' conditions+=Condition ("," conditions+=Condition)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'conditions'
		public Keyword getConditionsKeyword_4_0() { return cConditionsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//conditions+=Condition
		public Assignment getConditionsAssignment_4_2() { return cConditionsAssignment_4_2; }
		
		//Condition
		public RuleCall getConditionsConditionParserRuleCall_4_2_0() { return cConditionsConditionParserRuleCall_4_2_0; }
		
		//("," conditions+=Condition)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//conditions+=Condition
		public Assignment getConditionsAssignment_4_3_1() { return cConditionsAssignment_4_3_1; }
		
		//Condition
		public RuleCall getConditionsConditionParserRuleCall_4_3_1_0() { return cConditionsConditionParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class Condition_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.si5.polytech.CreateLanguage.Condition_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConditionAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConditionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Condition_Impl Condition:
		//	{Condition}
		//	'Condition';
		@Override public ParserRule getRule() { return rule; }
		
		//{Condition} 'Condition'
		public Group getGroup() { return cGroup; }
		
		//{Condition}
		public Action getConditionAction_0() { return cConditionAction_0; }
		
		//'Condition'
		public Keyword getConditionKeyword_1() { return cConditionKeyword_1; }
	}
	public class ObjectFoundElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.unice.si5.polytech.CreateLanguage.ObjectFound");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cObjectFoundAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cObjectFoundKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//ObjectFound:
		//	{ObjectFound}
		//	'ObjectFound';
		@Override public ParserRule getRule() { return rule; }
		
		//{ObjectFound} 'ObjectFound'
		public Group getGroup() { return cGroup; }
		
		//{ObjectFound}
		public Action getObjectFoundAction_0() { return cObjectFoundAction_0; }
		
		//'ObjectFound'
		public Keyword getObjectFoundKeyword_1() { return cObjectFoundKeyword_1; }
	}
	
	
	private final CreateProgramElements pCreateProgram;
	private final InstructionElements pInstruction;
	private final ConditionElements pCondition;
	private final ChoreographyElements pChoreography;
	private final EStringElements pEString;
	private final Instruction_ImplElements pInstruction_Impl;
	private final LoopChoreographyElements pLoopChoreography;
	private final FiniteChoreographyElements pFiniteChoreography;
	private final GoForwardElements pGoForward;
	private final InterruptionElements pInterruption;
	private final Condition_ImplElements pCondition_Impl;
	private final ObjectFoundElements pObjectFound;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public CreateLanguageGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pCreateProgram = new CreateProgramElements();
		this.pInstruction = new InstructionElements();
		this.pCondition = new ConditionElements();
		this.pChoreography = new ChoreographyElements();
		this.pEString = new EStringElements();
		this.pInstruction_Impl = new Instruction_ImplElements();
		this.pLoopChoreography = new LoopChoreographyElements();
		this.pFiniteChoreography = new FiniteChoreographyElements();
		this.pGoForward = new GoForwardElements();
		this.pInterruption = new InterruptionElements();
		this.pCondition_Impl = new Condition_ImplElements();
		this.pObjectFound = new ObjectFoundElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.unice.si5.polytech.CreateLanguage".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//CreateProgram:
	//	{CreateProgram}
	//	'CreateProgram'
	//	name=EString
	//	'{' ('instructions' '{' instructions+=Instruction ("," instructions+=Instruction)* '}')?
	//	'}';
	public CreateProgramElements getCreateProgramAccess() {
		return pCreateProgram;
	}
	
	public ParserRule getCreateProgramRule() {
		return getCreateProgramAccess().getRule();
	}
	
	//Instruction:
	//	Instruction_Impl | LoopChoreography | FiniteChoreography | GoForward;
	public InstructionElements getInstructionAccess() {
		return pInstruction;
	}
	
	public ParserRule getInstructionRule() {
		return getInstructionAccess().getRule();
	}
	
	//Condition:
	//	Condition_Impl | ObjectFound;
	public ConditionElements getConditionAccess() {
		return pCondition;
	}
	
	public ParserRule getConditionRule() {
		return getConditionAccess().getRule();
	}
	
	//Choreography:
	//	LoopChoreography | FiniteChoreography;
	public ChoreographyElements getChoreographyAccess() {
		return pChoreography;
	}
	
	public ParserRule getChoreographyRule() {
		return getChoreographyAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Instruction_Impl Instruction:
	//	{Instruction}
	//	'Instruction';
	public Instruction_ImplElements getInstruction_ImplAccess() {
		return pInstruction_Impl;
	}
	
	public ParserRule getInstruction_ImplRule() {
		return getInstruction_ImplAccess().getRule();
	}
	
	//LoopChoreography:
	//	{LoopChoreography}
	//	'LoopChoreography'
	//	name=EString
	//	'{' ('interruptions' '{' interruptions+=Interruption ("," interruptions+=Interruption)* '}')? ('instructions' '{'
	//	instructions+=Instruction ("," instructions+=Instruction)* '}')?
	//	'}';
	public LoopChoreographyElements getLoopChoreographyAccess() {
		return pLoopChoreography;
	}
	
	public ParserRule getLoopChoreographyRule() {
		return getLoopChoreographyAccess().getRule();
	}
	
	//FiniteChoreography:
	//	{FiniteChoreography}
	//	'FiniteChoreography'
	//	name=EString
	//	'{' ('interruptions' '{' interruptions+=Interruption ("," interruptions+=Interruption)* '}')? ('instructions' '{'
	//	instructions+=Instruction ("," instructions+=Instruction)* '}')?
	//	'}';
	public FiniteChoreographyElements getFiniteChoreographyAccess() {
		return pFiniteChoreography;
	}
	
	public ParserRule getFiniteChoreographyRule() {
		return getFiniteChoreographyAccess().getRule();
	}
	
	//GoForward:
	//	{GoForward}
	//	'GoForward';
	public GoForwardElements getGoForwardAccess() {
		return pGoForward;
	}
	
	public ParserRule getGoForwardRule() {
		return getGoForwardAccess().getRule();
	}
	
	//Interruption:
	//	{Interruption}
	//	'Interruption'
	//	'{' ('choreography' choreography=[Choreography|EString])? ('conditions' '{' conditions+=Condition (","
	//	conditions+=Condition)* '}')?
	//	'}';
	public InterruptionElements getInterruptionAccess() {
		return pInterruption;
	}
	
	public ParserRule getInterruptionRule() {
		return getInterruptionAccess().getRule();
	}
	
	//Condition_Impl Condition:
	//	{Condition}
	//	'Condition';
	public Condition_ImplElements getCondition_ImplAccess() {
		return pCondition_Impl;
	}
	
	public ParserRule getCondition_ImplRule() {
		return getCondition_ImplAccess().getRule();
	}
	
	//ObjectFound:
	//	{ObjectFound}
	//	'ObjectFound';
	public ObjectFoundElements getObjectFoundAccess() {
		return pObjectFound;
	}
	
	public ParserRule getObjectFoundRule() {
		return getObjectFoundAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
